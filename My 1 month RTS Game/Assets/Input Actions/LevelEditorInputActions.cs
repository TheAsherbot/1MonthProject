//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Input Actions/LevelEditorInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @LevelEditorInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @LevelEditorInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""LevelEditorInputActions"",
    ""maps"": [
        {
            ""name"": ""LevelEditor"",
            ""id"": ""1070a665-a264-4cd5-a5fa-f9e407fd3b24"",
            ""actions"": [
                {
                    ""name"": ""Paint"",
                    ""type"": ""Button"",
                    ""id"": ""ab8dd277-a0d1-4cab-890b-ba9f7ad2b06c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileMapSprite1"",
                    ""type"": ""Button"",
                    ""id"": ""c32c8246-329e-49c9-90f4-cc084821faea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileMapSprite2"",
                    ""type"": ""Button"",
                    ""id"": ""04321209-e0ad-40d4-a389-0de168ba14b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileMapSprite3"",
                    ""type"": ""Button"",
                    ""id"": ""5e1c9f22-ce6d-45c4-b076-1aa43bd0858d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileMapSprite4"",
                    ""type"": ""Button"",
                    ""id"": ""a2903b01-141d-4e07-af7d-3f72614e581a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TileMapSprite5"",
                    ""type"": ""Button"",
                    ""id"": ""244b7d53-de8e-49c0-9198-3f8f861661d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""b70397d0-baea-4c97-90b8-54901f4c108f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eb991afc-399e-4c60-ba64-e2445fbcb491"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Paint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38187638-9493-4eab-873e-b61faff025e8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileMapSprite1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""200b527b-ee3d-4a2c-b624-e013d0cfd58d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileMapSprite2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""604f4eb2-fdcc-445a-8a9b-90276eab1110"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileMapSprite3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51a50657-6aea-47f0-9e39-c3338aa3e429"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileMapSprite4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f7746de-4c76-471f-ac23-542eb65c1e19"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TileMapSprite5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85efbe1e-b5bf-402d-b9cf-3603070b3cfd"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // LevelEditor
        m_LevelEditor = asset.FindActionMap("LevelEditor", throwIfNotFound: true);
        m_LevelEditor_Paint = m_LevelEditor.FindAction("Paint", throwIfNotFound: true);
        m_LevelEditor_TileMapSprite1 = m_LevelEditor.FindAction("TileMapSprite1", throwIfNotFound: true);
        m_LevelEditor_TileMapSprite2 = m_LevelEditor.FindAction("TileMapSprite2", throwIfNotFound: true);
        m_LevelEditor_TileMapSprite3 = m_LevelEditor.FindAction("TileMapSprite3", throwIfNotFound: true);
        m_LevelEditor_TileMapSprite4 = m_LevelEditor.FindAction("TileMapSprite4", throwIfNotFound: true);
        m_LevelEditor_TileMapSprite5 = m_LevelEditor.FindAction("TileMapSprite5", throwIfNotFound: true);
        m_LevelEditor_Save = m_LevelEditor.FindAction("Save", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // LevelEditor
    private readonly InputActionMap m_LevelEditor;
    private List<ILevelEditorActions> m_LevelEditorActionsCallbackInterfaces = new List<ILevelEditorActions>();
    private readonly InputAction m_LevelEditor_Paint;
    private readonly InputAction m_LevelEditor_TileMapSprite1;
    private readonly InputAction m_LevelEditor_TileMapSprite2;
    private readonly InputAction m_LevelEditor_TileMapSprite3;
    private readonly InputAction m_LevelEditor_TileMapSprite4;
    private readonly InputAction m_LevelEditor_TileMapSprite5;
    private readonly InputAction m_LevelEditor_Save;
    public struct LevelEditorActions
    {
        private @LevelEditorInputActions m_Wrapper;
        public LevelEditorActions(@LevelEditorInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Paint => m_Wrapper.m_LevelEditor_Paint;
        public InputAction @TileMapSprite1 => m_Wrapper.m_LevelEditor_TileMapSprite1;
        public InputAction @TileMapSprite2 => m_Wrapper.m_LevelEditor_TileMapSprite2;
        public InputAction @TileMapSprite3 => m_Wrapper.m_LevelEditor_TileMapSprite3;
        public InputAction @TileMapSprite4 => m_Wrapper.m_LevelEditor_TileMapSprite4;
        public InputAction @TileMapSprite5 => m_Wrapper.m_LevelEditor_TileMapSprite5;
        public InputAction @Save => m_Wrapper.m_LevelEditor_Save;
        public InputActionMap Get() { return m_Wrapper.m_LevelEditor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LevelEditorActions set) { return set.Get(); }
        public void AddCallbacks(ILevelEditorActions instance)
        {
            if (instance == null || m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Add(instance);
            @Paint.started += instance.OnPaint;
            @Paint.performed += instance.OnPaint;
            @Paint.canceled += instance.OnPaint;
            @TileMapSprite1.started += instance.OnTileMapSprite1;
            @TileMapSprite1.performed += instance.OnTileMapSprite1;
            @TileMapSprite1.canceled += instance.OnTileMapSprite1;
            @TileMapSprite2.started += instance.OnTileMapSprite2;
            @TileMapSprite2.performed += instance.OnTileMapSprite2;
            @TileMapSprite2.canceled += instance.OnTileMapSprite2;
            @TileMapSprite3.started += instance.OnTileMapSprite3;
            @TileMapSprite3.performed += instance.OnTileMapSprite3;
            @TileMapSprite3.canceled += instance.OnTileMapSprite3;
            @TileMapSprite4.started += instance.OnTileMapSprite4;
            @TileMapSprite4.performed += instance.OnTileMapSprite4;
            @TileMapSprite4.canceled += instance.OnTileMapSprite4;
            @TileMapSprite5.started += instance.OnTileMapSprite5;
            @TileMapSprite5.performed += instance.OnTileMapSprite5;
            @TileMapSprite5.canceled += instance.OnTileMapSprite5;
            @Save.started += instance.OnSave;
            @Save.performed += instance.OnSave;
            @Save.canceled += instance.OnSave;
        }

        private void UnregisterCallbacks(ILevelEditorActions instance)
        {
            @Paint.started -= instance.OnPaint;
            @Paint.performed -= instance.OnPaint;
            @Paint.canceled -= instance.OnPaint;
            @TileMapSprite1.started -= instance.OnTileMapSprite1;
            @TileMapSprite1.performed -= instance.OnTileMapSprite1;
            @TileMapSprite1.canceled -= instance.OnTileMapSprite1;
            @TileMapSprite2.started -= instance.OnTileMapSprite2;
            @TileMapSprite2.performed -= instance.OnTileMapSprite2;
            @TileMapSprite2.canceled -= instance.OnTileMapSprite2;
            @TileMapSprite3.started -= instance.OnTileMapSprite3;
            @TileMapSprite3.performed -= instance.OnTileMapSprite3;
            @TileMapSprite3.canceled -= instance.OnTileMapSprite3;
            @TileMapSprite4.started -= instance.OnTileMapSprite4;
            @TileMapSprite4.performed -= instance.OnTileMapSprite4;
            @TileMapSprite4.canceled -= instance.OnTileMapSprite4;
            @TileMapSprite5.started -= instance.OnTileMapSprite5;
            @TileMapSprite5.performed -= instance.OnTileMapSprite5;
            @TileMapSprite5.canceled -= instance.OnTileMapSprite5;
            @Save.started -= instance.OnSave;
            @Save.performed -= instance.OnSave;
            @Save.canceled -= instance.OnSave;
        }

        public void RemoveCallbacks(ILevelEditorActions instance)
        {
            if (m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILevelEditorActions instance)
        {
            foreach (var item in m_Wrapper.m_LevelEditorActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LevelEditorActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LevelEditorActions @LevelEditor => new LevelEditorActions(this);
    public interface ILevelEditorActions
    {
        void OnPaint(InputAction.CallbackContext context);
        void OnTileMapSprite1(InputAction.CallbackContext context);
        void OnTileMapSprite2(InputAction.CallbackContext context);
        void OnTileMapSprite3(InputAction.CallbackContext context);
        void OnTileMapSprite4(InputAction.CallbackContext context);
        void OnTileMapSprite5(InputAction.CallbackContext context);
        void OnSave(InputAction.CallbackContext context);
    }
}
